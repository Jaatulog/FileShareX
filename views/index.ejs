<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Sharing Web App</title>
    <link rel="stylesheet" href="style.css">
    <style>
        /* Global Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background-color: #f0f4f8;
  color: #333;
  line-height: 1.6;
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Main Container */
.container {
  width: 80%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  text-align: center;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

form {
  margin-bottom: 40px;
}

/* Input & Button Styles */
input[type="text"], input[type="file"], input[type="number"] {
  display: block;
  margin: 10px auto;
  padding: 12px;
  width: 60%;
  border: 2px solid #ddd;
  border-radius: 8px;
  font-size: 14px;
  transition: border-color 0.3s ease;
}

input[type="text"]:focus, input[type="file"]:focus, input[type="number"]:focus {
  border-color: #5a67d8;
}

button {
  padding: 12px 24px;
  background-color: #5a67d8;
  color: white;
  border: none;
  cursor: pointer;
  border-radius: 8px;
  font-size: 16px;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #4c51bf;
}

/* File List and Item Styles */
.file-list {
  list-style: none;
  padding: 0;
  margin-top: 20px;
}

.file-item {
  display: flex;
  align-items: center;
  border-bottom: 1px solid #e5e5e5;
  padding: 15px;
  transition: background-color 0.3s ease;
}

.file-item:hover {
  background-color: #f7f7f7;
}

.profile-pic {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  margin-right: 20px;
  border: 2px solid #ddd;
}

.file-info {
  flex: 1;
  text-align: left;
}

.file-name {
  font-size: 16px;
  font-weight: bold;
  margin-bottom: 5px;
}

.file-date {
  font-size: 12px;
  color: #888;
}

.file-icon {
  width: 24px;
  height: 24px;
  margin-left: 10px;
  transition: transform 0.3s ease;
}

.file-icon:hover {
  transform: scale(1.2);
}

/* Action Button Styles */
.button {
  padding: 8px 16px;
  margin: 5px;
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-size: 14px;
}

.download-btn {
  background-color: #4CAF50; /* Green */
}

.download-btn:hover {
  background-color: #45a049;
}

.delete-btn {
  background-color: #f44336; /* Red */
}

.delete-btn:hover {
  background-color: #e53935;
}

/* Progress Bar Styles */
#uploadProgressContainer, #downloadProgressContainer {
  font-family: monospace;
  margin: 20px 0;
}

#uploadProgressBar, #downloadProgressBar {
  width: 100%;
  height: 8px;
  background-color: #ddd;
  border-radius: 4px;
  position: relative;
}

#uploadProgressBar::after, #downloadProgressBar::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  background-color: #5a67d8;
  border-radius: 4px;
  width: 0%;
  transition: width 0.5s ease-in-out;
}

#uploadProgressContainer span, #downloadProgressContainer span {
  display: block;
  font-size: 12px;
  color: #5a67d8;
  margin-top: 5px;
}

/* Responsive Design */
@media (max-width: 768px) {
  .container {
    width: 95%;
  }

  input[type="text"], input[type="file"], input[type="number"] {
    width: 80%;
  }

  button {
    width: 100%;
  }
}

@media (max-width: 480px) {
  .profile-pic {
    width: 40px;
    height: 40px;
  }

  .file-item {
    flex-direction: column;
    align-items: flex-start;
  }

  .file-info {
    margin-top: 10px;
    text-align: left;
  }
}
    </style>
</head>
<body>
    <div class="container">
        <h1>Upload and Share Files</h1>

        <!-- Upload Form -->
        <form id="uploadForm" action="/upload" method="POST" enctype="multipart/form-data">
            <input type="text" name="name" placeholder="Your Name" required>
            <input type="file" name="file" required>
            <input type="text" name="description" placeholder="Enter a description for the file" required>
            <input type="number" name="expiresInMinutes" placeholder="Expires in (minutes):" required>
            <input type="password" name="password" placeholder="Set a password for download" required>
            <button type="submit">Upload</button>
        </form>

        <!-- Upload Progress Bar -->
        <div id="uploadProgressContainer" style="display: none;">
            <p>Upload Progress:</p>
            <pre id="uploadProgressBar">[                    ] 0%</pre>
        </div>

        <h2>Uploaded Files</h2>
        <ul class="file-list">
            <% files.forEach(file => { %>
                <li class="file-item">
                    <img src="/<%= file.profilePic %>" alt="Profile Picture" class="profile-pic">
                    <div class="file-info">
                        <h3><%= file.name %></h3>
                        <p>Description: <%= file.description %></p>
                        <p>Uploaded: <%= file.uploadedAt %></p>
                        <p>Expires: <%= file.expiresIn %> minutes</p>
                        <p>File: <%= file.originalname %></p>
                        <img src="/icons/<%= file.fileType.slice(1) %>.png" alt="<%= file.fileType %> icon" class="file-icon">
                        <a href="#" class="button download-btn" onclick="downloadFile('<%= file.filename %>', '<%= file.password %>')">Download</a>
                        
                        <!-- Delete Button with Password Prompt -->
                        <form action="/delete/<%= file.filename %>" method="POST" class="delete-form">
                            <input type="hidden" name="deletePassword" class="delete-password">
                            <button type="button" class="button delete-btn" onclick="confirmDelete(this)">Delete</button>
                        </form>
                    </div>
                </li>
            <% }); %>
        </ul>

        <!-- Download Progress Bar -->
        <div id="downloadProgressContainer" style="display: none;">
            <p>Download Progress:</p>
            <pre id="downloadProgressBar">[                    ] 0%</pre>
        </div>
    </div>

    <script>
        // Upload Progress
        const uploadForm = document.getElementById('uploadForm');
        const uploadProgressBar = document.getElementById('uploadProgressBar');
        const uploadProgressContainer = document.getElementById('uploadProgressContainer');

        uploadForm.addEventListener('submit', function(event) {
            event.preventDefault();

            const formData = new FormData(uploadForm);
            const xhr = new XMLHttpRequest();

            xhr.open('POST', '/upload', true);

            xhr.upload.onprogress = function(event) {
                if (event.lengthComputable) {
                    const percentComplete = Math.round((event.loaded / event.total) * 100);
                    updateProgressBar(uploadProgressBar, percentComplete);
                    uploadProgressContainer.style.display = 'block';
                }
            };

            xhr.onload = function() {
                if (xhr.status === 200) {
                    alert('File uploaded successfully!');
                    updateProgressBar(uploadProgressBar, 0); // Reset progress bar after upload
                    uploadProgressContainer.style.display = 'none';
                    location.reload(); // Reload the page to show the uploaded file
                } else {
                    alert('Error uploading file');
                }
            };

            xhr.send(formData);
        });

        // Download Progress
        function downloadFile(filename, filePassword) {
            const userPassword = prompt('Enter the password to download this file:');
            if (userPassword === filePassword) {
                const xhr = new XMLHttpRequest();
                xhr.open('GET', `/download/${filename}`, true);
                xhr.responseType = 'blob';

                xhr.onprogress = function(event) {
                    if (event.lengthComputable) {
                        const percentComplete = Math.round((event.loaded / event.total) * 100);
                        updateProgressBar(downloadProgressBar, percentComplete);
                        downloadProgressContainer.style.display = 'block';
                    }
                };

                xhr.onload = function() {
                    if (xhr.status === 200) {
                        const url = window.URL.createObjectURL(xhr.response);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = filename;
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a);
                        window.URL.revokeObjectURL(url);
                        updateProgressBar(downloadProgressBar, 0); // Reset progress bar
                        downloadProgressContainer.style.display = 'none';
                    } else {
                        alert('Error downloading file');
                    }
                };

                xhr.send();
            } else {
                alert('Incorrect password. File download aborted.');
            }
        }

        // Confirm Delete with Password
        function confirmDelete(button) {
            const deletePassword = prompt("Enter the password to delete this file:");
            if (deletePassword) {
                const deleteForm = button.closest('.delete-form');
                deleteForm.querySelector('.delete-password').value = deletePassword;
                deleteForm.submit();
            } else {
                alert("Deletion canceled.");
            }
        }

        // Function to update the progress bar text content
        function updateProgressBar(barElement, percentComplete) {
            const progressBarWidth = 20; // Number of characters in the bar
            const filledBars = Math.round((percentComplete / 100) * progressBarWidth);
            const emptyBars = progressBarWidth - filledBars;
            barElement.textContent = `[${'='.repeat(filledBars)}${' '.repeat(emptyBars)}] ${percentComplete}%`;
        }
    </script>
</body>
</html>
